{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Komposition The video editor built for screencasters Introduction Installation Source Code","title":"Home"},{"location":"#komposition","text":"The video editor built for screencasters Introduction Installation Source Code","title":"Komposition"},{"location":"contributing/","text":"Contributing Komposition is an early-stage software project. You should expect some rough edges. If you find a bug, or a place where documentation could be better, please submit an issue on GitHub . If you want to help develop Komposition, look around the reported issues on Github if there's anything you can pick up. However, as this is a highly opinionated piece of software, discussion prior to any change is highly encouraged. It would be very sad to reject your pull request becuase it hasn't been properly planned beforehand. Another very helpful thing you can do to help is to spread the word. This is a non-funded open-source code project run by volunteers, and all boosts are of great value.","title":"Contributing"},{"location":"contributing/#contributing","text":"Komposition is an early-stage software project. You should expect some rough edges. If you find a bug, or a place where documentation could be better, please submit an issue on GitHub . If you want to help develop Komposition, look around the reported issues on Github if there's anything you can pick up. However, as this is a highly opinionated piece of software, discussion prior to any change is highly encouraged. It would be very sad to reject your pull request becuase it hasn't been properly planned beforehand. Another very helpful thing you can do to help is to spread the word. This is a non-funded open-source code project run by volunteers, and all boosts are of great value.","title":"Contributing"},{"location":"roadmap/","text":"Roadmap Komposition is an early-stage project. Although it's very exciting, Komposition is lacking some big features and has a lot of rough edges. Have a look at the issue tracker on GitHub to see what's planned. If you have any other suggestions, or want to help with these features, please head over to the Gitter room to discuss them.","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"Komposition is an early-stage project. Although it's very exciting, Komposition is lacking some big features and has a lot of rough edges. Have a look at the issue tracker on GitHub to see what's planned. If you have any other suggestions, or want to help with these features, please head over to the Gitter room to discuss them.","title":"Roadmap"},{"location":"user-guide/installation/","text":"Installation Komposition runs on Linux, macOS, and Windows. The main way to install Komposition is from source, but binary packages are available for macOS from Homebrew . Binary Packages Homebrew Komposition is available for macOS through a Homebrew formula . Given that you have Homebrew installed, run the following in your terminal to install Komposition: brew install komposition Komposition is now on your PATH and can be run from a terminal: komposition Note There's currently no application launcher in the Homebrew formula, but that might be added in the future. Install from Source Code Komposition can be built on macOS, Windows, and Linux. If you're not an experienced Haskell developer, it's recommended to use Stack to build the application. The following instructions will be based on Stack, so go ahead and install that first . Using another build tool If you know your way around building Haskell programs, you might want to build it using Nix or regular Cabal, instead. Getting the Source Code Next, clone the source code repository using Git. git clone https://github.com/owickstrom/komposition.git cd komposition Alternatively, if you're not using Git, download a ZIP archive : wget https://github.com/owickstrom/komposition/archive/master.zip -O komposition-master.zip unzip komposition-master.zip cd komposition-master You now have the source code. Jump on to the instructions below specific to your operating system. Debian/Ubuntu First, install the required dependencies: sudo apt-get install \\ ffmpeg \\ sox \\ libgmp-dev \\ libavutil-dev \\ libavformat-dev \\ libavcodec-dev \\ libswscale-dev \\ libavdevice-dev \\ libgirepository1.0-dev \\ libgtk-3-dev \\ libpango1.0-dev \\ libgdk-pixbuf2.0-dev \\ libgstreamer1.0-dev \\ gstreamer1.0-libav \\ gstreamer1.0-gtk3 \\ gstreamer1.0-plugins-base \\ gstreamer1.0-plugins-good \\ gstreamer1.0-plugins-bad Warning If you find additional packages that needs to be installed, please submit an issue on GitHub . Next, build and install the application using Stack: stack install You should now have Komposition available: ~/.local/bin/komposition If you have added ~/.local/bin to your PATH , run: komposition Older GTK+ Versions If you see an error like the following when installing, it means your version of GTK+ is too old: Not in scope: data constructor \u2018Gtk.FileChooserNative\u2019 This has been detected on Ubuntu 16.04. You may fix the issue by upgrading to Ubuntu 18.04, or by compiling and installing a newer version of GTK+ from source. macOS brew install pkg-config gobject-introspection gtk+3 ffmpeg sox gstreamer libffi gst-plugins-base gst-libav brew install gst-plugins-good --with-gtk+3 export PKG_CONFIG_PATH= /usr/local/opt/libffi/lib/pkgconfig # if you get an error in the next step about 'happy' not being on your # PATH, run this command first: stack build happy stack install Windows Komposition can be built on Windows in an MSYS2 environment. The precise instructions are not available in this documentation yet, but you should be able to install the dependencies using a command like the following, and then compile and run Komposition using Stack. # something like this... pacman -S mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-libav mingw-w64-x86_64-gst-plugins-{base,good,bad} # TODO: also gtk+3, ffmpeg, and sox Nix/NixOS Komposition is not yet in nixpkgs , but it can be installed with Nix from an archive on GitHub. First, consider installing Cachix and using the Komposition binary cache. It's not strictly required, but will save you time waiting on compilation. cachix use komposition Next, use nix-env to install Komposition from the master branch: nix-env -iA komposition -f https://github.com/owickstrom/komposition/archive/master.tar.gz Run it from the command line: komposition","title":"Installation"},{"location":"user-guide/installation/#installation","text":"Komposition runs on Linux, macOS, and Windows. The main way to install Komposition is from source, but binary packages are available for macOS from Homebrew .","title":"Installation"},{"location":"user-guide/installation/#binary-packages","text":"","title":"Binary Packages"},{"location":"user-guide/installation/#homebrew","text":"Komposition is available for macOS through a Homebrew formula . Given that you have Homebrew installed, run the following in your terminal to install Komposition: brew install komposition Komposition is now on your PATH and can be run from a terminal: komposition Note There's currently no application launcher in the Homebrew formula, but that might be added in the future.","title":"Homebrew"},{"location":"user-guide/installation/#install-from-source-code","text":"Komposition can be built on macOS, Windows, and Linux. If you're not an experienced Haskell developer, it's recommended to use Stack to build the application. The following instructions will be based on Stack, so go ahead and install that first . Using another build tool If you know your way around building Haskell programs, you might want to build it using Nix or regular Cabal, instead.","title":"Install from Source Code"},{"location":"user-guide/installation/#getting-the-source-code","text":"Next, clone the source code repository using Git. git clone https://github.com/owickstrom/komposition.git cd komposition Alternatively, if you're not using Git, download a ZIP archive : wget https://github.com/owickstrom/komposition/archive/master.zip -O komposition-master.zip unzip komposition-master.zip cd komposition-master You now have the source code. Jump on to the instructions below specific to your operating system.","title":"Getting the Source Code"},{"location":"user-guide/installation/#debianubuntu","text":"First, install the required dependencies: sudo apt-get install \\ ffmpeg \\ sox \\ libgmp-dev \\ libavutil-dev \\ libavformat-dev \\ libavcodec-dev \\ libswscale-dev \\ libavdevice-dev \\ libgirepository1.0-dev \\ libgtk-3-dev \\ libpango1.0-dev \\ libgdk-pixbuf2.0-dev \\ libgstreamer1.0-dev \\ gstreamer1.0-libav \\ gstreamer1.0-gtk3 \\ gstreamer1.0-plugins-base \\ gstreamer1.0-plugins-good \\ gstreamer1.0-plugins-bad Warning If you find additional packages that needs to be installed, please submit an issue on GitHub . Next, build and install the application using Stack: stack install You should now have Komposition available: ~/.local/bin/komposition If you have added ~/.local/bin to your PATH , run: komposition Older GTK+ Versions If you see an error like the following when installing, it means your version of GTK+ is too old: Not in scope: data constructor \u2018Gtk.FileChooserNative\u2019 This has been detected on Ubuntu 16.04. You may fix the issue by upgrading to Ubuntu 18.04, or by compiling and installing a newer version of GTK+ from source.","title":"Debian/Ubuntu"},{"location":"user-guide/installation/#macos","text":"brew install pkg-config gobject-introspection gtk+3 ffmpeg sox gstreamer libffi gst-plugins-base gst-libav brew install gst-plugins-good --with-gtk+3 export PKG_CONFIG_PATH= /usr/local/opt/libffi/lib/pkgconfig # if you get an error in the next step about 'happy' not being on your # PATH, run this command first: stack build happy stack install","title":"macOS"},{"location":"user-guide/installation/#windows","text":"Komposition can be built on Windows in an MSYS2 environment. The precise instructions are not available in this documentation yet, but you should be able to install the dependencies using a command like the following, and then compile and run Komposition using Stack. # something like this... pacman -S mingw-w64-x86_64-gstreamer mingw-w64-x86_64-gst-libav mingw-w64-x86_64-gst-plugins-{base,good,bad} # TODO: also gtk+3, ffmpeg, and sox","title":"Windows"},{"location":"user-guide/installation/#nixnixos","text":"Komposition is not yet in nixpkgs , but it can be installed with Nix from an archive on GitHub. First, consider installing Cachix and using the Komposition binary cache. It's not strictly required, but will save you time waiting on compilation. cachix use komposition Next, use nix-env to install Komposition from the master branch: nix-env -iA komposition -f https://github.com/owickstrom/komposition/archive/master.tar.gz Run it from the command line: komposition","title":"Nix/NixOS"},{"location":"user-guide/introduction/","text":"Introduction Komposition is the video editor built for screencasters. It lets you focus on producing and publishing quality content, instead of spending all of your time in complicated video editors. Stop wasting time on manually adjusting clip lengths, building still-frame segments, and dragging clips around, and enjoy a new screencast editing experience. Komposition automatically detects scenes in screen capture video, automatically detects sentences in voice-over audio recordings, and features a high-productivity editing workflow based on keyboard navigation. Adjust Your Expectations Komposition is a young project with many of its planned features not implemented yet. It will most likely see some bug reports, surprise you in various ways, have subpar performance, and be somewhat under-documented in the foreseeable future. You, the brave early adopter, might need to lower your expectations slightly if you're coming from Premiere Pro or Final Cut, at least in terms of software maturity. But rest assured, Komposition is going to reward you in the long run. If you have any questions, please ask in the Gitter room . If you hit any problem, please submit an issue on GitHub .","title":"Introduction"},{"location":"user-guide/introduction/#introduction","text":"Komposition is the video editor built for screencasters. It lets you focus on producing and publishing quality content, instead of spending all of your time in complicated video editors. Stop wasting time on manually adjusting clip lengths, building still-frame segments, and dragging clips around, and enjoy a new screencast editing experience. Komposition automatically detects scenes in screen capture video, automatically detects sentences in voice-over audio recordings, and features a high-productivity editing workflow based on keyboard navigation. Adjust Your Expectations Komposition is a young project with many of its planned features not implemented yet. It will most likely see some bug reports, surprise you in various ways, have subpar performance, and be somewhat under-documented in the foreseeable future. You, the brave early adopter, might need to lower your expectations slightly if you're coming from Premiere Pro or Final Cut, at least in terms of software maturity. But rest assured, Komposition is going to reward you in the long run. If you have any questions, please ask in the Gitter room . If you hit any problem, please submit an issue on GitHub .","title":"Introduction"},{"location":"user-guide/workflow/","text":"Workflow Komposition is a highly opinionated piece of software, specialized at editing screencasts. As such, it prescribes a specific recording and editing workflow. To reach optimal results and have a nice experience doing so, please follow the guidelines outlined below. Recording It all begins with the recording. For Komposition to be able to automatically classify the parts of your screencast, and for you to be able to compose those parts in a fine-grained and effortless manner, your recording needs to be done in a certain way. Write a detailed script before recording anything. This is paramount for the Komposition workflow. Also, it's generally good advice that will save you loads of time, even if you're not using Komposition. Your script should be detailed enough for you to record video and audio separately based off it. Record video and audio separately. Video and audio recorded simultaneously is hard to separate and work with independently. The microphone easily picks up the sound of you typing or clicking the mouse, making the audio track inherently tied to the video track. If you're not a native English speaker, recording Finally, it's easier to get a clean audio track without computer fans humming if you record it separately. Take long breaks, two seconds or more, between the parts in your screencast. For the scene and sentence classifiers to pick up the different segments, you need to take long explicit breaks. A \"part\" of a screencast should be a short sequence of actions, and the corresponding sentence, or couple of sentences, describing that action. The more fine-grained you make your parts, the more control and comfort you'll have when editing the screencast in Komposition. Composing Parts Now that you have recored your video and audio, you can import using automatic classification. This will give you a library loaded with fine-grained parts of video and audio. Using the commands you compose your parts in sequences and parallels into a complete screencast.","title":"Workflow"},{"location":"user-guide/workflow/#workflow","text":"Komposition is a highly opinionated piece of software, specialized at editing screencasts. As such, it prescribes a specific recording and editing workflow. To reach optimal results and have a nice experience doing so, please follow the guidelines outlined below.","title":"Workflow"},{"location":"user-guide/workflow/#recording","text":"It all begins with the recording. For Komposition to be able to automatically classify the parts of your screencast, and for you to be able to compose those parts in a fine-grained and effortless manner, your recording needs to be done in a certain way. Write a detailed script before recording anything. This is paramount for the Komposition workflow. Also, it's generally good advice that will save you loads of time, even if you're not using Komposition. Your script should be detailed enough for you to record video and audio separately based off it. Record video and audio separately. Video and audio recorded simultaneously is hard to separate and work with independently. The microphone easily picks up the sound of you typing or clicking the mouse, making the audio track inherently tied to the video track. If you're not a native English speaker, recording Finally, it's easier to get a clean audio track without computer fans humming if you record it separately. Take long breaks, two seconds or more, between the parts in your screencast. For the scene and sentence classifiers to pick up the different segments, you need to take long explicit breaks. A \"part\" of a screencast should be a short sequence of actions, and the corresponding sentence, or couple of sentences, describing that action. The more fine-grained you make your parts, the more control and comfort you'll have when editing the screencast in Komposition.","title":"Recording"},{"location":"user-guide/workflow/#composing-parts","text":"Now that you have recored your video and audio, you can import using automatic classification. This will give you a library loaded with fine-grained parts of video and audio. Using the commands you compose your parts in sequences and parallels into a complete screencast.","title":"Composing Parts"},{"location":"user-guide/concepts/clipboard/","text":"Clipboard The clipboard is used for copying and pasting in the timeline. It can hold a single timeline part, i.e. a sequence, parallel, video part, or audio part. To copy the focused part of the timeline to the clipboard, press the y key. To paste the part stored in the clipboard, press the p key. This adds the clipboard part after your currently focused timeline part. If you want to add it before , use the uppercase P version of paste. Like in Vim, deleting something from the timeline also puts the deleted part in the clipboard. Mainstream software call this operation cutting . This is useful if you want to move something from one place to another, without making any intermediate copies.","title":"Clipboard"},{"location":"user-guide/concepts/clipboard/#clipboard","text":"The clipboard is used for copying and pasting in the timeline. It can hold a single timeline part, i.e. a sequence, parallel, video part, or audio part. To copy the focused part of the timeline to the clipboard, press the y key. To paste the part stored in the clipboard, press the p key. This adds the clipboard part after your currently focused timeline part. If you want to add it before , use the uppercase P version of paste. Like in Vim, deleting something from the timeline also puts the deleted part in the clipboard. Mainstream software call this operation cutting . This is useful if you want to move something from one place to another, without making any intermediate copies.","title":"Clipboard"},{"location":"user-guide/concepts/commands/","text":"Commands Commands are issued by you, the user of Komposition, to navigate and modify, the timeline and other views of the application. The following table lists some of the central commands you can issue, and their key bindings. Most commands can also be issued by using the top-level menu bar. Command Mode Key Binding Description Help All ? Display key bindings help in the current mode Split Timeline s Split the currently focused composition, if possible Join Timeline m Merge the currently focused and the right-adjacent composition, if possible Delete Timeline d Delete the currently focused composition Import Timeline i Start a new asset import Preview Timeline Space Preview the currently focused composition Undo Timeline u Undo the last command Redo Timeline Ctrl + r Redo the last undone command Exit Timeline q Exit the Komposition application Cancel Library, Import q Cancel/exit the current mode There are more commands not listed in this table. Press ? in Komposition to see the full listing. Key Sequences To add clips and gaps, there are key sequence bindings available. To add after, you generally start by pressing A and then a key for the type of clip or gap you want to add. To add before, start with the a key. Clips are specified with the c key, and gaps with the g key. When a video or audio track, or anything within a track is focused, you press two keys: insert after ( a ) or insert before ( A ) clip ( c ) or gap ( g ) When a parallel is focused, you need to also specify if it's the video track or audio track you want to add before or append to. The full key sequence then consists of three keys: insert before ( A ) or insert after ( a ) video ( v ) or audio track ( a ) clip ( c ) or gap ( g ) There are variations for adding at the leftmost position, and at the rightmost position, but those are currently only available in the menu bar. And again, all key sequences are not listed in this document. Press ? in Komposition to see the full listing.","title":"Commands"},{"location":"user-guide/concepts/commands/#commands","text":"Commands are issued by you, the user of Komposition, to navigate and modify, the timeline and other views of the application. The following table lists some of the central commands you can issue, and their key bindings. Most commands can also be issued by using the top-level menu bar. Command Mode Key Binding Description Help All ? Display key bindings help in the current mode Split Timeline s Split the currently focused composition, if possible Join Timeline m Merge the currently focused and the right-adjacent composition, if possible Delete Timeline d Delete the currently focused composition Import Timeline i Start a new asset import Preview Timeline Space Preview the currently focused composition Undo Timeline u Undo the last command Redo Timeline Ctrl + r Redo the last undone command Exit Timeline q Exit the Komposition application Cancel Library, Import q Cancel/exit the current mode There are more commands not listed in this table. Press ? in Komposition to see the full listing.","title":"Commands"},{"location":"user-guide/concepts/commands/#key-sequences","text":"To add clips and gaps, there are key sequence bindings available. To add after, you generally start by pressing A and then a key for the type of clip or gap you want to add. To add before, start with the a key. Clips are specified with the c key, and gaps with the g key. When a video or audio track, or anything within a track is focused, you press two keys: insert after ( a ) or insert before ( A ) clip ( c ) or gap ( g ) When a parallel is focused, you need to also specify if it's the video track or audio track you want to add before or append to. The full key sequence then consists of three keys: insert before ( A ) or insert after ( a ) video ( v ) or audio track ( a ) clip ( c ) or gap ( g ) There are variations for adding at the leftmost position, and at the rightmost position, but those are currently only available in the menu bar. And again, all key sequences are not listed in this document. Press ? in Komposition to see the full listing.","title":"Key Sequences"},{"location":"user-guide/concepts/importing/","text":"Importing To import media files, video or audio, into your library , press the i key or click Import Assets in the Project top menu. You'll see a modal dialog. The first control selects a file to import. Second, you'll see a checkbox. Check this if you want to automatically classify scenes when importing video, or automatically classify sentences when importing audio. Finally, click the \"Import\" button to start the process. It can take some time, so go grab a cup of coffee or tea. Scene and Sentence Classification Automatically classifying scenes in a video means that Komposition will analyze the original video file and figure out in which segments there are movement and action in the video. Segments where nothing is happening are disregarded. When imported into the library, each segment with movement ends up as a separate asset representing that scene . Similarly, audio files can be classified to find spoken sentences. Komposition will analyze the original audio file and find the segments where the voiceover audio is silent, and disregard those segments. When imported into the library, each segment with non-silence ends up as a separate asset representing that sentence , or passage. Default Video Speed If you're importing a video file, you may adjust the default video speed . The video speed is used as a default for clips that are added to the timeline based on the imported video asset. If you also use automatic scene classification, as described above, all classified scenes will have the selected default video speed. Video speed can be subsequently changed for individual clips in the timeline. Recording and Workflow Scene and sentence classification is closely tied to the workflow and recording techniques prescribed by Komposition. To enjoy good results using Komposition, make sure to follow the guidelines .","title":"Importing"},{"location":"user-guide/concepts/importing/#importing","text":"To import media files, video or audio, into your library , press the i key or click Import Assets in the Project top menu. You'll see a modal dialog. The first control selects a file to import. Second, you'll see a checkbox. Check this if you want to automatically classify scenes when importing video, or automatically classify sentences when importing audio. Finally, click the \"Import\" button to start the process. It can take some time, so go grab a cup of coffee or tea.","title":"Importing"},{"location":"user-guide/concepts/importing/#scene-and-sentence-classification","text":"Automatically classifying scenes in a video means that Komposition will analyze the original video file and figure out in which segments there are movement and action in the video. Segments where nothing is happening are disregarded. When imported into the library, each segment with movement ends up as a separate asset representing that scene . Similarly, audio files can be classified to find spoken sentences. Komposition will analyze the original audio file and find the segments where the voiceover audio is silent, and disregard those segments. When imported into the library, each segment with non-silence ends up as a separate asset representing that sentence , or passage.","title":"Scene and Sentence Classification"},{"location":"user-guide/concepts/importing/#default-video-speed","text":"If you're importing a video file, you may adjust the default video speed . The video speed is used as a default for clips that are added to the timeline based on the imported video asset. If you also use automatic scene classification, as described above, all classified scenes will have the selected default video speed. Video speed can be subsequently changed for individual clips in the timeline.","title":"Default Video Speed"},{"location":"user-guide/concepts/importing/#recording-and-workflow","text":"Scene and sentence classification is closely tied to the workflow and recording techniques prescribed by Komposition. To enjoy good results using Komposition, make sure to follow the guidelines .","title":"Recording and Workflow"},{"location":"user-guide/concepts/library/","text":"Library The library contains all your import media assets. Depending on how you import assets, and if it's video or audio, they are stored differently. Video Assets Original video files are not copied into the project directory when imported into the library. Instead, the library only stores the file path and metadata about the original video file. Warning As the video asset is referring to an original somewhere on your filesystem, if you move or delete the original file it will break Komposition. A file path resolution mechanism should be added in a future version. In addition to storing the metadata about the original file, a proxy media file is created when importing. This is lower-resolution video file that is used in scene classification, and when previewing, to improve performance and keep memory usage down. Video assets produced by the scene classifier are stored in a similar way. They consist of the original file path and the start and end timestamps of the classified scene. Audio Assets Like video assets, regular audio assets consist of a file path specifying the original audio file, and metadata. However, if you import with sentence classification, the sentences are split into new audio files stored in the project working directory. Note Sentence classification producing new audio files in the project working directory is a technical consequence of the audio classification implementation. In a future version of Komposition it should work just as video scene classification, i.e. not producing new audio files, but referring to the original with start and end timestamp.","title":"Library"},{"location":"user-guide/concepts/library/#library","text":"The library contains all your import media assets. Depending on how you import assets, and if it's video or audio, they are stored differently.","title":"Library"},{"location":"user-guide/concepts/library/#video-assets","text":"Original video files are not copied into the project directory when imported into the library. Instead, the library only stores the file path and metadata about the original video file. Warning As the video asset is referring to an original somewhere on your filesystem, if you move or delete the original file it will break Komposition. A file path resolution mechanism should be added in a future version. In addition to storing the metadata about the original file, a proxy media file is created when importing. This is lower-resolution video file that is used in scene classification, and when previewing, to improve performance and keep memory usage down. Video assets produced by the scene classifier are stored in a similar way. They consist of the original file path and the start and end timestamps of the classified scene.","title":"Video Assets"},{"location":"user-guide/concepts/library/#audio-assets","text":"Like video assets, regular audio assets consist of a file path specifying the original audio file, and metadata. However, if you import with sentence classification, the sentences are split into new audio files stored in the project working directory. Note Sentence classification producing new audio files in the project working directory is a technical consequence of the audio classification implementation. In a future version of Komposition it should work just as video scene classification, i.e. not producing new audio files, but referring to the original with start and end timestamp.","title":"Audio Assets"},{"location":"user-guide/concepts/navigation/","text":"Navigation To navigate the timeline in a Komposition project, you modify the focus . The focus describes the current part of the timeline you're focusing. It is modified using movement commands, such as the \"Focus Left\" and \"Focus Up\" commands. Visually, it's represented with a white border around the focused timeline part. For example: Focusing a sequence: Focusing a parallel: Focusing a video track: Focusing an audio track: Focusing a video part: Focusing an audio part: Key Bindings Navigation is meant to be keyboard-driven, in that you use your arrow keys or the h j k l keys to move around, like in Vim . Press ? to display the help and its list of key bindings to learn more. You can also click any clip or gap in a track to move directly to it. Note There's currently no way to focus sequences or parallels using the mouse, but this should be addressed in the future.","title":"Navigation"},{"location":"user-guide/concepts/navigation/#navigation","text":"To navigate the timeline in a Komposition project, you modify the focus . The focus describes the current part of the timeline you're focusing. It is modified using movement commands, such as the \"Focus Left\" and \"Focus Up\" commands. Visually, it's represented with a white border around the focused timeline part. For example: Focusing a sequence: Focusing a parallel: Focusing a video track: Focusing an audio track: Focusing a video part: Focusing an audio part:","title":"Navigation"},{"location":"user-guide/concepts/navigation/#key-bindings","text":"Navigation is meant to be keyboard-driven, in that you use your arrow keys or the h j k l keys to move around, like in Vim . Press ? to display the help and its list of key bindings to learn more. You can also click any clip or gap in a track to move directly to it. Note There's currently no way to focus sequences or parallels using the mouse, but this should be addressed in the future.","title":"Key Bindings"},{"location":"user-guide/concepts/preview/","text":"Preview When you're working with your timeline, adding clips and gaps, arranging them in sequences and parallels, you may want to preview the rendered result. Doing a full render can take some time, so while you're working on a project, use preview to see your intermediate results. Press the space bar on your keyboard to start a preview. This will preview the currently focused part of the timeline. To stop the preview, press the spacebar again.","title":"Preview"},{"location":"user-guide/concepts/preview/#preview","text":"When you're working with your timeline, adding clips and gaps, arranging them in sequences and parallels, you may want to preview the rendered result. Doing a full render can take some time, so while you're working on a project, use preview to see your intermediate results. Press the space bar on your keyboard to start a preview. This will preview the currently focused part of the timeline. To stop the preview, press the spacebar again.","title":"Preview"},{"location":"user-guide/concepts/projects/","text":"Projects In Komposition, the top-level concept is the project . The following are all part of a project: the timeline the current focus the library with its media assets video rendering settings proxy media settings directories to store intermediate files in The Welcome Screen When launching Komposition, you will be presented with the welcome screen. From there, you can either create a new project, or opening an existing project. When creating a new project, you will be prompted for: The settings for your final video render, i.e. video resolution and frame rate. These are currently the only configurable parameters. Also, these cannot be reconfigured once the project has been created. A directory in which the project files will be saved. Depending on your operating system's file selector dialog, you might need to create a directory manually and select that. To open an existing project, use the file selector to select the same directory you specified when creating the project. Saving Projects When a project is open, and you are in the timeline mode, you can save the current project. Click Save in the Project menu, and it will be persisted. Warning The project directory format and file selection dialogs might change drastically in the early versions of Komposition, as the current state is not ideal. Changes might not be backwards-compatible for some time, so be careful about upgrading if you're in the middle of editing a project.","title":"Projects"},{"location":"user-guide/concepts/projects/#projects","text":"In Komposition, the top-level concept is the project . The following are all part of a project: the timeline the current focus the library with its media assets video rendering settings proxy media settings directories to store intermediate files in","title":"Projects"},{"location":"user-guide/concepts/projects/#the-welcome-screen","text":"When launching Komposition, you will be presented with the welcome screen. From there, you can either create a new project, or opening an existing project. When creating a new project, you will be prompted for: The settings for your final video render, i.e. video resolution and frame rate. These are currently the only configurable parameters. Also, these cannot be reconfigured once the project has been created. A directory in which the project files will be saved. Depending on your operating system's file selector dialog, you might need to create a directory manually and select that. To open an existing project, use the file selector to select the same directory you specified when creating the project.","title":"The Welcome Screen"},{"location":"user-guide/concepts/projects/#saving-projects","text":"When a project is open, and you are in the timeline mode, you can save the current project. Click Save in the Project menu, and it will be persisted. Warning The project directory format and file selection dialogs might change drastically in the early versions of Komposition, as the current state is not ideal. Changes might not be backwards-compatible for some time, so be careful about upgrading if you're in the middle of editing a project.","title":"Saving Projects"},{"location":"user-guide/concepts/rendering/","text":"Rendering When you have finished edited and are happy with your project, it's time to render. Press the r button on your keyboard, or click the \"Render\" button under the \"Project\" top menu. A file selector will open, in which you decide where the rendered file should be saved and what file name it should have. The rendering can take some time, so this is a good time to get that second cup of coffee or tea.","title":"Rendering"},{"location":"user-guide/concepts/rendering/#rendering","text":"When you have finished edited and are happy with your project, it's time to render. Press the r button on your keyboard, or click the \"Render\" button under the \"Project\" top menu. A file selector will open, in which you decide where the rendered file should be saved and what file name it should have. The rendering can take some time, so this is a good time to get that second cup of coffee or tea.","title":"Rendering"},{"location":"user-guide/concepts/timeline/","text":"Timeline A project in Komposition has a timeline , where you place your video and audio parts you want to render to a video file. The timeline is a tree structure, with a fixed depth, that can be described as follows: A timeline contains one or more child sequences . A sequence contains one or more child parallels , where each child is played sequentially in order. A parallel contains a video track and an audio track , where the video and audio tracks are played in parallel (simultaneously). The longest track defines the length of the parallel. Sequences Sequences are used to compose parallels that belong together, forming a cohesive part, or chapter, of your screencast. Parallels inside a sequence are played in sequence. By placing video and audio parts in separate parallels inside a sequence, you can synchronize the start of video and audio. Parallels Parallels are used to play video and audio tracks in parallel. The parts within a track play in sequence, until the end of the longest track. This means that if the audio parts form a longer track than the video parts, the video will be extended with still frames. Correspondingly, if the video track is longer, the audio track will be silent in the end. Track Parts Video and audio parts added to a track are either clips from the library , or gaps . A clip is a slice of some original media file. A video gap is a still frame segment, and an audio gap is just silence. Examples If you want video clip v1 to start at exactly the same time as audio clip a1 , put them both in the beginning of a parallel. If you want video clip v1 and audio clip a1 to play simultaneously, and when they end play video clip v2 , put v1 and a1 in one parallel followed by a parallel containing only v2 . If you want video clip v1 to play with silence, and then play audio clip a1 together with video clip v2 , put v1 in a parallel, and v2 and a1 in another parallel. If you want to play video clip v1 together with audio clip a1 , but start a1 after two seconds, put v1 , a two second audio gap, and a1 in a parallel. Adjusting Timeline Parts The sidebar shows properties of the focused timeline part, and for things like video and audio clips, it allows you to adjust certain properties of those timeline parts. You may change the start and end position within the original media of a video clip, or adjust the playback speed.","title":"Timeline"},{"location":"user-guide/concepts/timeline/#timeline","text":"A project in Komposition has a timeline , where you place your video and audio parts you want to render to a video file. The timeline is a tree structure, with a fixed depth, that can be described as follows: A timeline contains one or more child sequences . A sequence contains one or more child parallels , where each child is played sequentially in order. A parallel contains a video track and an audio track , where the video and audio tracks are played in parallel (simultaneously). The longest track defines the length of the parallel.","title":"Timeline"},{"location":"user-guide/concepts/timeline/#sequences","text":"Sequences are used to compose parallels that belong together, forming a cohesive part, or chapter, of your screencast. Parallels inside a sequence are played in sequence. By placing video and audio parts in separate parallels inside a sequence, you can synchronize the start of video and audio.","title":"Sequences"},{"location":"user-guide/concepts/timeline/#parallels","text":"Parallels are used to play video and audio tracks in parallel. The parts within a track play in sequence, until the end of the longest track. This means that if the audio parts form a longer track than the video parts, the video will be extended with still frames. Correspondingly, if the video track is longer, the audio track will be silent in the end.","title":"Parallels"},{"location":"user-guide/concepts/timeline/#track-parts","text":"Video and audio parts added to a track are either clips from the library , or gaps . A clip is a slice of some original media file. A video gap is a still frame segment, and an audio gap is just silence.","title":"Track Parts"},{"location":"user-guide/concepts/timeline/#examples","text":"If you want video clip v1 to start at exactly the same time as audio clip a1 , put them both in the beginning of a parallel. If you want video clip v1 and audio clip a1 to play simultaneously, and when they end play video clip v2 , put v1 and a1 in one parallel followed by a parallel containing only v2 . If you want video clip v1 to play with silence, and then play audio clip a1 together with video clip v2 , put v1 in a parallel, and v2 and a1 in another parallel. If you want to play video clip v1 together with audio clip a1 , but start a1 after two seconds, put v1 , a two second audio gap, and a1 in a parallel.","title":"Examples"},{"location":"user-guide/concepts/timeline/#adjusting-timeline-parts","text":"The sidebar shows properties of the focused timeline part, and for things like video and audio clips, it allows you to adjust certain properties of those timeline parts. You may change the start and end position within the original media of a video clip, or adjust the playback speed.","title":"Adjusting Timeline Parts"},{"location":"user-guide/concepts/undo-redo/","text":"Undo Redo Timeline commands and asset imports can be undone and redone in Komposition. Press the u key to undo the last command, and press Ctrl + r to redo the last undone command.","title":"Undo & Redo"},{"location":"user-guide/concepts/undo-redo/#undo-redo","text":"Timeline commands and asset imports can be undone and redone in Komposition. Press the u key to undo the last command, and press Ctrl + r to redo the last undone command.","title":"Undo &amp; Redo"}]}